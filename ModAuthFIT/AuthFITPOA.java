package ModAuthFIT;


/**
* ModAuthFIT/AuthFITPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from AuthFIT.idl
* Wednesday, November 30, 2016 7:10:06 PM GMT
*/

public abstract class AuthFITPOA extends org.omg.PortableServer.Servant
 implements ModAuthFIT.AuthFITOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("addUser", new java.lang.Integer (0));
    _methods.put ("authUser", new java.lang.Integer (1));
    _methods.put ("changePassword", new java.lang.Integer (2));
    _methods.put ("deleteUser", new java.lang.Integer (3));
    _methods.put ("shutdown", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ModAuthFIT/AuthFIT/addUser
       {
         String login = in.read_string ();
         String password = in.read_string ();
         boolean $result = false;
         $result = this.addUser (login, password);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // ModAuthFIT/AuthFIT/authUser
       {
         String login = in.read_string ();
         String password = in.read_string ();
         boolean $result = false;
         $result = this.authUser (login, password);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // ModAuthFIT/AuthFIT/changePassword
       {
         String login = in.read_string ();
         String password = in.read_string ();
         String new_password = in.read_string ();
         boolean $result = false;
         $result = this.changePassword (login, password, new_password);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // ModAuthFIT/AuthFIT/deleteUser
       {
         String login = in.read_string ();
         String password = in.read_string ();
         boolean $result = false;
         $result = this.deleteUser (login, password);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // ModAuthFIT/AuthFIT/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ModAuthFIT/AuthFIT:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AuthFIT _this() 
  {
    return AuthFITHelper.narrow(
    super._this_object());
  }

  public AuthFIT _this(org.omg.CORBA.ORB orb) 
  {
    return AuthFITHelper.narrow(
    super._this_object(orb));
  }


} // class AuthFITPOA
